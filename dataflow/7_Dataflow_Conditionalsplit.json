{
	"name": "7_Dataflow_Conditionalsplit",
	"properties": {
		"folder": {
			"name": "1_Dataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee_ds",
						"type": "DatasetReference"
					},
					"name": "employeeinfo"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sink_ds",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "sink_ds",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as integer,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeeinfo",
				"employeeinfo split(DEPARTMENT_ID == 50,",
				"     disjoint: false) ~> split1@(didd50, restdid)",
				"split1@didd50 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['result_cndtnalsplit_did50.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@restdid sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['result_cndtnlsplit_restdid.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}
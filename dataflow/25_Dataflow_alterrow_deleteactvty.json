{
	"name": "25_Dataflow_alterrow_deleteactvty",
	"properties": {
		"folder": {
			"name": "4_Dataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sr_ds",
						"type": "DatasetReference"
					},
					"name": "customersource1"
				},
				{
					"dataset": {
						"referenceName": "sinkds_sqldb",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sinkds_sqldb",
						"type": "DatasetReference"
					},
					"name": "customersource"
				},
				{
					"dataset": {
						"referenceName": "sinkds_sqldb",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cust_id as string,",
				"          cust_name as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> customersource1",
				"source(output(",
				"          cust_id as string,",
				"          cust_name as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"customersource1 alterRow(upsertIf(true())) ~> alterRow1",
				"source1, customersource1 exists(source1@cust_id == customersource1@cust_id,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 alterRow(deleteIf(true())) ~> alterRow2",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          deptno as integer,",
				"          deptname as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     keys:['cust_id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> customersource",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          deptno as integer,",
				"          deptname as string",
				"     ),",
				"     deletable:true,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:false,",
				"     keys:['cust_id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}
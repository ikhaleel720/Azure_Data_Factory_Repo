{
	"name": "wait_until_actvty",
	"properties": {
		"activities": [
			{
				"name": "setflag",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "flag",
					"value": "flase"
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "setflag",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('flag'),'true')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "gettodaydate",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "getfilelist",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "date",
								"value": {
									"value": "@formatDateTime(utcnow(),'ddMMyyyy')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filter1",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "gettodaydate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get Metadata1').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,variables('date'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "checklen",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Filter1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "length",
								"value": {
									"value": "@array(length(activity('Filter1').output.Value))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "checklen",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('length'),3)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 30
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "source_waitactvty",
												"type": "DatasetReference",
												"parameters": {
													"srcfilename": {
														"value": "@variables('filelist')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "sink_waitactvty",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "flag",
											"value": "true"
										}
									}
								]
							}
						},
						{
							"name": "Get Metadata1",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "getmeta_ds",
									"type": "DatasetReference"
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "getfilelist",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "filelist",
								"value": {
									"value": "@activity('Get Metadata1').output.childItems",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"variables": {
			"date": {
				"type": "String"
			},
			"length": {
				"type": "Array"
			},
			"flag": {
				"type": "String"
			},
			"filelist": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "wait,until_actvty"
		},
		"annotations": [],
		"lastPublishTime": "2024-08-24T14:55:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}